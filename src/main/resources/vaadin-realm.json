{
  "id" : "fec3f0c9-8873-4fcd-b845-e6bd10066ea5",
  "realm" : "vaadin",
  "displayName" : "",
  "displayNameHtml" : "",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "63fdb1f9-85b8-4192-a6a0-850f77caafc6",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "fec3f0c9-8873-4fcd-b845-e6bd10066ea5",
      "attributes" : { }
    }, {
      "id" : "c0083612-df7b-4e7b-9c1d-b49ba1af242c",
      "name" : "default-roles-vaadin",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ]
      },
      "clientRole" : false,
      "containerId" : "fec3f0c9-8873-4fcd-b845-e6bd10066ea5",
      "attributes" : { }
    }, {
      "id" : "34c74849-d4f3-4fcb-bcc9-c970e081d5de",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "fec3f0c9-8873-4fcd-b845-e6bd10066ea5",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "5cac8b58-0a3d-4412-861a-0b914d3a65df",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "impersonation", "view-identity-providers", "view-clients", "view-events", "query-groups", "view-realm", "create-client", "manage-events", "manage-authorization", "query-users", "manage-clients", "manage-identity-providers", "query-realms", "query-clients", "view-users", "view-authorization", "manage-realm", "manage-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "2d645353-ae28-4f24-8547-b0eda74f2555",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "8da0979b-b74e-421d-841c-99737881e1c8",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "28097b28-9fac-4fe6-adb8-0b2c43b94c9f",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "5fd28e75-abd3-4780-a077-cd1c70423091",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "2944aece-bc65-4799-ab7d-02f7e4664988",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "539899d9-fc95-4d27-9db1-db1f8dd9dd0a",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "d6f8c5f2-5818-46d8-8501-02e1e12780b5",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "0d385184-8623-48a4-8467-e2506e7cdfc3",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "567f8d07-1146-4200-ba8d-4a97d3aae964",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "c69b8415-76ee-4d6c-9dd8-58da61002d71",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "a3a422a8-96b9-4eab-9235-9ea58d5397a3",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "a741068a-c4c0-4cd4-87c9-9f47ad045c45",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "e62a4ba7-710c-48e7-b3f8-df4997dfa9bb",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "20a876d2-3ede-4eef-9892-c04938d4f395",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "18ac404c-d6b8-4daa-83ee-fec85d24340f",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "3565a230-4871-4dd0-a630-6ad6e2704a9d",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "45d62ef6-8ce6-4dfa-981a-289a15862962",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      }, {
        "id" : "66b6d2bf-2f3e-4188-b0fe-aca79627cfbb",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "vaadin-frontend" : [ {
        "id" : "7fa0047c-8278-4516-8dee-0c0a0591958c",
        "name" : "user",
        "description" : "vaadin Test Application User",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "70661d4b-1e24-4196-ac34-203efbbdcef3",
        "attributes" : { }
      }, {
        "id" : "7a0ac7a4-7952-423d-af2c-18013b8bc8cf",
        "name" : "admin",
        "description" : "vaadin Test Application Administrator",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "70661d4b-1e24-4196-ac34-203efbbdcef3",
        "attributes" : { }
      } ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ ],
      "account" : [ {
        "id" : "b3db7604-adc2-452d-8d5c-2a59c1a415d7",
        "name" : "manage-account",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "972deed9-26a0-4d56-8c2e-49fcd0c96fd6",
        "attributes" : { }
      }, {
        "id" : "4bc0132d-f2a4-4313-9ea8-a6022d127686",
        "name" : "view-groups",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "972deed9-26a0-4d56-8c2e-49fcd0c96fd6",
        "attributes" : { }
      }, {
        "id" : "a85db0d0-d36c-4ba6-b5ad-28a945f3f428",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "972deed9-26a0-4d56-8c2e-49fcd0c96fd6",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "c0083612-df7b-4e7b-9c1d-b49ba1af242c",
    "name" : "default-roles-vaadin",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "fec3f0c9-8873-4fcd-b845-e6bd10066ea5"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "b3bc2a06-86fe-438a-9d4a-70dd734f12c8",
    "username" : "admin",
    "firstName" : "Admin",
    "lastName" : "vaadin",
    "email" : "admin@temp.org",
    "emailVerified" : false,
    "createdTimestamp" : 1747233418138,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "c44a2259-9228-425d-a2bf-cbb38a867e8c",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1747233428971,
      "secretData" : "{\"value\":\"ZxoAWduanmoOpdvaZmPhS0fe2qtiXg7aCFG8HCjLqLo=\",\"salt\":\"B+HqXmYS+CuhvhZMY77G9A==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-vaadin" ],
    "clientRoles" : {
      "vaadin-frontend" : [ "user", "admin" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "6296af6a-5a02-4847-80d9-063a1f8375c6",
    "username" : "user",
    "firstName" : "User",
    "lastName" : "vaadin",
    "email" : "user@temp.org",
    "emailVerified" : false,
    "createdTimestamp" : 1747233456184,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "6e2a6b3a-9db1-484a-897e-b8513fb452a0",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1747233466579,
      "secretData" : "{\"value\":\"dglhkdYOn4TJlLTtQRhpwvzNcnhf5nZsAiuyTEMFX+Q=\",\"salt\":\"7CFmtsxt+FoNx7RRtRWBJw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-vaadin" ],
    "clientRoles" : {
      "vaadin-frontend" : [ "user" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "972deed9-26a0-4d56-8c2e-49fcd0c96fd6",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/vaadin/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/vaadin/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a872211d-e4b7-4861-8098-e9fa0659b867",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/vaadin/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/vaadin/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "1fc2b696-bdd1-4d8c-9668-e777785d50d8",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "f01ee849-58d1-4172-ab7f-8338f22d6556",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "12da8be8-f03e-4b6c-8b51-c5dc76702335",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "70661d4b-1e24-4196-ac34-203efbbdcef3",
    "clientId" : "vaadin-frontend",
    "name" : "",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "secret",
    "redirectUris" : [ "http://localhost:8080/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1747233802",
      "backchannel.logout.session.required" : "true",
      "standard.token.exchange.enabled" : "false",
      "frontchannel.logout.session.required" : "true",
      "post.logout.redirect.uris": "http://localhost:8080/*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "bbc180ac-0b2c-45d7-a06f-e729e26bd26c",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "06fa628f-5962-4c76-a5f4-bd76ffd781d8",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/vaadin/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/vaadin/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "8d713e42-2ab3-4b4d-8af3-bb90818c63d2",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "9693a274-77b6-434c-bd31-e04b4f807dda",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "06b5f394-ee8a-4b4a-8f75-3060fdbcd073",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2d852ca3-01e3-4ced-8960-234f9a27466f",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "57294639-b78e-4a51-bad5-1633b835d7d0",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "be0b3dcf-a99b-471d-b0dc-f937947395fe",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "67f0afda-e405-4fc4-a569-bbe394ca0708",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "b7665d63-4a49-4578-98ce-f2f106d2f334",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "82979a3d-a036-4694-964b-edc7c3d1ee64",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "18137c4f-e18a-40dc-9518-d6679c700832",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "591ccb11-f460-40b2-801f-cb5fc63c3501",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "913ae556-c519-4ab0-b870-e0b2a607288f",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "3ec868a3-55a7-46e7-bb23-78d3e3330c34",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "ebdd9011-f9be-48de-af1c-56b30af78f86",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "65a6ceeb-c5f2-4ebb-9460-459e537d745d",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "ab594a39-4d1b-48fe-ae42-adf24077e7bc",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2c9374ba-370b-4ea5-ac6f-d50318e528b6",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3d217c84-ffe9-425d-9f38-10dfc543ece0",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "891839ab-4d7b-4310-9ab0-e53950791d95",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b625e5de-9321-4441-aadf-8630b376596e",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "22fa8db2-25bb-4828-ad72-693277be42d4",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "0414a37c-bbc3-4709-bad6-76d76654aec4",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "21756cdd-8444-4855-888b-353b1cff3596",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "2c6a2f08-6f2a-4d7f-88d3-012ccb38a9b1",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "936b20ab-a522-4699-8322-39e5adf7d7be",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d7b463f2-2bec-4aaa-bc1d-e8bdbfba8fa3",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "b1b99f1d-6b30-4a44-88ee-e99901816e98",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b9795689-4b1f-4a6d-80b7-5cab4221d215",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "d29f5cb5-c24b-4179-9900-b60e0c91a7be",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "d1dcaeb3-2c2b-4437-8292-0ca04730af8a",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "lightweight.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "usermodel.clientRoleMapping.clientId" : "vaadin-frontend"
      }
    } ]
  }, {
    "id" : "a74a68e4-6a44-4d0b-9d79-53a9c5092270",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "304e1e3b-b9ba-4916-a294-48f831d4f01b",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "ba97bfbb-a5b6-4dcd-855b-275a55eb4937",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "f0695501-b88b-4550-bb01-1ad0ee436589",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a3826adf-209e-4b9a-8459-b1df7cbbe868",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2e6281dd-1491-40c5-96f1-cdcbb6bfcdee",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e18bfab6-de52-45ee-936d-5e3b44bc0c0a",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "eb51b9ce-4980-4f79-ae71-6de7d188451c",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4f746df2-44ed-4752-8313-5b1e7de01bc6",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f7118bec-edb5-4685-a261-b26119575564",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "afec4fc6-2c3d-448d-9412-c213d7b52af6",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "2e4ce00e-5c71-4bbb-817a-c976e8b53c35",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cf7446f0-ba0d-4aa5-9426-6fe974da0158",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a7e60fcd-c8bd-46bc-b98b-47c6acdbfd52",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "93272316-48a7-4203-acce-cf1981f2db83",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "fd9d252f-b2ca-4e23-a570-a6fcc6094d52",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "ef3a9205-7c85-4f62-96cb-f107890dc4e8",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "61b39019-baf6-472a-a625-41c1013171e9",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "87ab1964-d5f8-4781-9b5e-ddc5201b3682",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "d2ce37dd-9c40-402e-a703-308a3eb25cd3",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "3317e401-7712-4fb1-b808-d47f1433c960",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "bbff17a8-e1c8-4def-b9b2-4d2b47acbe7c",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "ea90791f-ff13-4dc9-8df4-ad8b98100cc0",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "abf95f38-b7e1-45fa-9400-1d7802574b2d",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "fceffc5b-0d99-4c5d-86ce-43460a9e46d7",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "e8b85dd4-cac7-4caf-a0f0-cfba9ec4063d",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "629bb38c-fd19-4622-8c02-ec73a99d41a9",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "1f73a89c-6068-445b-9167-f54a7b57666d",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "508eccf5-eb49-4ba6-94d9-c535709f019e" ],
        "secret" : [ "dbn6xcz2HpqDkgC1KTmr4Z1ygbBcXyHloGZn_zLR3LR_fw7vEaHLlU_tw_Uw014xKqE6ko7TuHqBWZ3Izqm_Ny2ytwa8Bg7Bxys0s3bew1QO329YdPCxKTBqHtS27dINntcZzJtTpJ8YOfEXxdTBNzMJrIaOSpDR6sGgJ69GMoU" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "d070bf55-9a87-4fb5-a942-7c6f80844b1c",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAvFOgwlpNb/6osze1EqfZrVePPjotT4FbJ4RC8G8zSTo/a+1q/niU7j7dm/y4drxJm0+zZOP0XqJF0LTXTADuCHelv0tjU+GF8RVED/Ig09AlcKLfDWZgGdi4aw01aH75igjH32wD5mNL0QzL27iNiMOw/+If2E2RNqBCmbMqATt358KN0UZLxDyZgQ1U+ck0q6vXElNrd01ztXt9g4QII/Pra3PtC//Y1WvoTng1sJaIBFZeNMXlRPM6busPw5c3AseOUnUPcAJaJgU8O2azI364WNzyJkeJ+maqiR+etiR7nU+/TWRt1Mdwk0YNzccedEpGa7Kyz/ZLkLhuBIP4wQIDAQABAoIBABC4sC5xjCykhOAc0yQL6UT94EcbLUjA6JISqUrl5LzcwiLYGsbrd/XLeSvPfaV1RGfY5MnRf7IjYGWOmQszje8MiJf6nqAlBxqH09pCmm2ULq7Yl0t+Sowg9Qb0Tkiv9YIvE2ggFByRtnqiUzt4IIEDNyURM9il0n3yLtes0872DKCBqHb7deiaz4eYdYnOXMorAQ9XYQx63lz+EmWOXf+rOoUC1Tk2uU/I3nb+ZgOfJr+vYG/u9lTmBszJexTQmRMnQJTpXRgwN6TVFCXiS3nE7fi00tY2y7egKaItqMgW0v1t3pmqzxX/AlHa6uS9PbX1B9gq7IdlMjuwTipq0N0CgYEA8Ko6wR/7KimO7Nns0QkmGv0c3vIFM+N9aLzD7umjhXlcAYkvZzS1Q4RUcRk6TgV96XjRLghD/MTT3+aSdLzKEiw8saBTdsYKMW57c5ZQ/ew04uR+5BVwpGcUI8MLLUvZWfBOOum6EOi+KJd5Dyq6BAj61ZqFYC2s5ls17Cz6c+MCgYEAyFOllawPvpI+c8A/eyxt13Kl4Uc4gtAhvwtZ68vdRkLj1rEnslERi07LyQrhvNFGiFXXoJB84Zl9u8+l0gzBLrQf+AI/Emoe4YhjmRbVVEAzilRCzINqXffPPM4eKtw195AFKtaacrUgt0s+Pu1Oi9OWR4rMENlhCU+eUVQ3agsCgYA5QcbIu7sdxNVkNFTLRsnyEdYUlK/4MF9d08spxBxLXRwuoVzNyRR3A7yzS7U7asMSENRzhzPlp05hLpIZg/Dvcebeu64fy+4Q5KAqV9DdGJ1cfdBSo2cxNfTsrTKzjCAh7bIvAfxqmXTkY2VB3oBzBU/oEeM5hqRkCb9CeVD80QKBgAF59Fd1DCyoYUNzIESlIC4dTzGo17bHF+iTidceCoRxC8LSTWuYA1wWeZQCu4UruaxZjZxGVFVJT07qCdvRcj8I3s9yHMri81VQLwO60lmrm3Wih1eAhHEq2WEmV7yTIOaxLgiRylOcGCChslS+ZPzM02e1kylwoLFz38PTrhDfAoGBAI8+NOCwRqJQ9iilizaWvn2APsiI3IcSx8f9EJLus0MfTDkGEmdM2BBvSn/ll9SYA+E/1xq1fxXSsK9b5Uq89ZRUTfULvajDFOJdpJ/rZcaZu6GMV3mbb5f4YDq3EgQ8IL1mHZ8VbSJJ2EFTjvtT55Hw2C6VtYrOitRsxNRzGMlP" ],
        "certificate" : [ "MIICmzCCAYMCBgGWzzlo4jANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZlbGljaXQwHhcNMjUwNTE0MTQzNDI4WhcNMzUwNTE0MTQzNjA4WjARMQ8wDQYDVQQDDAZlbGljaXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC8U6DCWk1v/qizN7USp9mtV48+Oi1PgVsnhELwbzNJOj9r7Wr+eJTuPt2b/Lh2vEmbT7Nk4/ReokXQtNdMAO4Id6W/S2NT4YXxFUQP8iDT0CVwot8NZmAZ2LhrDTVofvmKCMffbAPmY0vRDMvbuI2Iw7D/4h/YTZE2oEKZsyoBO3fnwo3RRkvEPJmBDVT5yTSrq9cSU2t3TXO1e32DhAgj8+trc+0L/9jVa+hOeDWwlogEVl40xeVE8zpu6w/DlzcCx45SdQ9wAlomBTw7ZrMjfrhY3PImR4n6ZqqJH562JHudT79NZG3Ux3CTRg3Nxx50SkZrsrLP9kuQuG4Eg/jBAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIfS9xcmFedoCHzuDyX2eqhReWcGiZkVdaMVWSGpDyQLTAewy7BXNoRfNTYOXvTs3LyAJgqVziC7ilsNLb+/jWthConAcbTMjknoStbs9nAF8WgC3p8PJVfOhpaOoL8YJU1W4xXC9Fxv4/N/OiFqmSZlwKNAoBlkikuItFkJSpJp0M1a1DvmvEqkzPBARau8awCbC53yG1m/a5dWbxedUp8Vl49j+T2+fza+suRc7uuvX8lMJLG8/nf8ajQpV271Hf154kC9RAZsZ5LFYyzC/fE1l6VbaAOlMcK3YZ7tVKa1ESxw4JE0BfsOCP3ytMNtWk4fOz2rQoC6LjukSP08VDU=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "1da03fd3-c9e7-4091-a33b-72a03493e0d7",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAnN2z2x7MYvVkpSE9u14DLwHM43+RzsOse6LmU4nX1+bLCvVUsB0RQkNRk+hlIDGCPz1q8iEXHGxkXIruA51wLKi5JHXgjObxVGBoqJKkQ2KL5SZ99pjVLrdXUK8NrP57g39j49zNxP/ORDTNrIawoTN7KGq5fvP6iTUcOWi/bCqxECOELWY23FGC07BBxB+Vkidg/nkQYb5NSqYhI/fVzFg1LnD4CDkH2b3G1SzZFKozwtP29MBYeKPT+unGOx/Fnk/67EVyJ4qG9PijVt5FqwTWC/pzMgIKczvz8/8BFnM0osnIEFFq8k1lToBKqLCZez993dOkKZES+roSI+yscwIDAQABAoIBABY0d+ozoOD9NaL+YpusQi0cRyGJBF3NaxQRSiNXJtukCufhNHy9kJzdpKWYRwBYocRL8GCX+IqIeWh0Lh8K4T8hHxwfJ4sqgczc3NPH9kKnp3/ng/stRTgYsd50+S2c1GUX2k7+CY6yW0Niah7a7hPTksJ04Q8sgDF9+CHURwyLgaTwFygCgaysGrscNM1ThlOp4LqQDcBT9B6trv7TlgfVTyVdFvhNRk/rzjeW1XU+8mocwl3IFQqQ4bHxeH4xJPEQ6GTndgi6xvyCGIO2mpJSe2r0NNGq1bh0s9vmVnPn9F6jVHdM5ScMotBfTTmYMnRLLOZH5lV9bc9AnxnUj4kCgYEA13S3YjL6I2H6lt9Eb5TfQjsx2iFmzgFiPiSQoC3K1Kp1NFIAb0ue+8qGyTK163GIwRXA/AdiGC1RcM9+PgRpEAIxPCMw92sSfvBquxTyjcTqmFZ2/TzF6mu63autbX9SAvH6/e2AaJb+uGATfZcGc38JlsgZcXsqeCo/wbP+vK0CgYEAumKAPzntiJYwalWj+sMm8pYCIIBGYLhzjtBhA1WjjpncaKC3nCcjyPhj8H0LTlQPN4m/YZ8Rg5SzC8DJs8SlPO44Qg+Iy2tKCb+Xgn3v2YoSPuIzTZ4LN0GisHCaJFkAdWubg9V1E8xe0osUUIj5bYacP2d/SwJoK13O4i6mEZ8CgYBx7uaKpypfS5CX97jYyIDHJUZXcxJKHbE162APVCfODdWstTBFqleIDrD39Dj/KCqI8Ff87mqRHmXSoebAJNTqAj7G7lUWgShmt/u4snsRPPBRXmfNwjVmoVFPp1kubgWQSSXQ4ablp/NKzIOCBjsDGEqZ0Xai696pbK4KYIR0gQKBgQCtoeexfwie7rNpzCB4EmdtJHwUxQtLPWpByDQoRBabWRCw09BZA0leBrArsIHg1YRbi9KjYemR9+wYbeA5vV7l9VKpkAky399YV4kQwru3n93BgT6j9zChqF6kGjIu3E8GFFoLJcbsy74mS/R/1irvcrCKjKNUQIjEpZ5+rVB+JwKBgQDQ4Kc3ln5Wk9f/XN12guJoVMaXF+byeFtkI9yoytIqAndv/OYuF0sUV1FGmeK85Y3yc4caZ79g8BPNSn4khmqxB6tx9yn7KNlUCNvmG3hYxr4ty+ecVrvEwIzo2VRLa/CoXYaGSbmO4H6xPpGORhSa0jVQjUoikVnakOFAb2SQ1w==" ],
        "certificate" : [ "MIICmzCCAYMCBgGWzzlpXDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZlbGljaXQwHhcNMjUwNTE0MTQzNDI4WhcNMzUwNTE0MTQzNjA4WjARMQ8wDQYDVQQDDAZlbGljaXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCc3bPbHsxi9WSlIT27XgMvAczjf5HOw6x7ouZTidfX5ssK9VSwHRFCQ1GT6GUgMYI/PWryIRccbGRciu4DnXAsqLkkdeCM5vFUYGiokqRDYovlJn32mNUut1dQrw2s/nuDf2Pj3M3E/85ENM2shrChM3soarl+8/qJNRw5aL9sKrEQI4QtZjbcUYLTsEHEH5WSJ2D+eRBhvk1KpiEj99XMWDUucPgIOQfZvcbVLNkUqjPC0/b0wFh4o9P66cY7H8WeT/rsRXIniob0+KNW3kWrBNYL+nMyAgpzO/Pz/wEWczSiycgQUWryTWVOgEqosJl7P33d06QpkRL6uhIj7KxzAgMBAAEwDQYJKoZIhvcNAQELBQADggEBABo9Ex7+yVdbW0tlR8jStoodNsYMadvL2VGzKhYboqhRoIY08ZLTR1Y1Rx4eKWjvz/ikV53mP6f10cagy6DBMtJAngucsQ7TFUpc37/U+kcnGJrQu9kwol6MVNRmaKyQ07pjxdaI7WhlQ2B9cX1GMcOqDTYe7/JCSojj+mStwgRUswtPz6J4ZXHNZmNL+b/LMYkIqaJEajoEDc5mWDpVi3PPAjS5O4JMS4/p4UvKfwAgB3JkCM2dgL9OBxsdjqCBkRZbEKTK7mPbcStMKY8jqSVvXRuuRfNCs6WtEK6M4qFIxvKxV8QUo/x1Dv24ha/Yd7R0eeGU3CSNYDc7XkdiamU=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "95b9b9f7-e714-4f4e-a9ad-75f434297852",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "7a08b78f-8722-4280-98e9-27bf21affbd1" ],
        "secret" : [ "sm_J17mXb-yVD0UIVSV2-g" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "0e5f6507-9708-45e8-80b7-b1a4e435241f",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3d021a22-870a-4497-930d-55aaf9c3e8ea",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e90e779b-7e40-4cac-8a00-11ea9bf8a5f7",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b45453b6-9baf-45ba-9614-ca7ddb483af7",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "64137bf9-f24a-4f9c-9df9-acc57652269e",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "806b145d-eb6f-45ff-bfdd-80db5eabc00f",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "416664a7-7022-433b-9d20-1929c9307b15",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0129f913-0472-4d1a-9684-8f6aa3569cec",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6344f07f-3107-4541-b3a7-0d715ccd707b",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b118c6e0-991d-41ff-ad3e-610ef81a5c2d",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c2997758-b73a-4f45-9ec5-875d0090166b",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "19a1281f-2a6f-4596-9261-b6828e677edb",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1faeff9d-e207-4caa-8292-7141bb911c07",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fcc9e294-a9e4-43c7-be40-01a2c7d9747a",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "da19d84a-5735-4624-ba69-60076f09ffbe",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4d13f134-f297-424e-8f31-a183e404caad",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7df5a711-f005-49bc-acb5-b82015652e3b",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4cae5f58-a6da-4c16-ac77-d175ceab0b08",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "efaedd9b-f902-46fb-bf0a-be36291e3abc",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2503d2f3-37a4-44e7-b6a8-409f4c63044f",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "455b73f0-a054-4917-99cc-5074a4f4a6a2",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "42f1b8f4-7840-4286-8631-7fe1a2d49edc",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "3bb8f4aa-b876-4526-bffc-935633ac6b97",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "saml.signature.algorithm" : "",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "frontendUrl" : "",
    "acr.loa.map" : "{}"
  },
  "keycloakVersion" : "26.2.3",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}
